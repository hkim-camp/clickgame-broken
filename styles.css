html {
    /* Base font size can remain for general accessibility */
    font-size: 16px;
}

:root {
    /* Revert to fixed sizes for widgets */
    --widget-width: 150px;
    --widget-height: 150px;
    --widget-margin: 5px;
}

h1 {
    font-size: 5vh;
    /* Revert to viewport height based scaling for titles */
}

h2 {
    font-size: 3vh;
    /* Revert to viewport height based scaling for titles */
}

body {
    --gompei-count: 1;
    /* Glassmorphism background with a darkening overlay */
    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('./grass.jpeg');
    background-size: cover;
    background-position: center;
    background-attachment: fixed;

    color: white;
    overflow: hidden;
    /* New flex properties to manage page layout */
    display: flex;
    flex-direction: column;
    height: 100vh;
    margin: 0;
    /* Remove default browser margin */
}

#header {
    padding: 0.5rem 1rem;
    margin: 1rem 1rem 0 1rem;
    /* Add margin to the header */
    background: rgba(0, 0, 0, 0.2);
    text-align: center;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);
    border-radius: 1rem;
}

#header h1,
#header h2 {
    margin: 0.25rem 0;
}

/* Prevents highlighting on game elements when clicked */
#store-container,
#lawn-simulator,
#widget-container {
    -webkit-user-select: none;
    /* Safari */
    user-select: none;
    /* Standard syntax */
}

#game-body {
    display: flex;
    /* Let the game body grow to fill available space instead of a fixed height */
    flex-grow: 1;
    width: 100vw;
    min-height: 0;
    /* Fix for nested flex containers */
    padding: 1rem;
    /* Add some padding around the game body */
    box-sizing: border-box;
}

#main-game-content {
    flex: 0 0 70%;
    /* Occupy 70% of width, don't grow or shrink */
    display: flex;
    flex-direction: column;
    height: 100%;
    /* Ensure it fills the height of game-body */
    gap: 1rem;
    /* Add a gap between the store and widget containers */
}


#store-container {
    /* Glassmorphism Style */
    background: rgba(25, 25, 25, 0.4);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 1rem;
    padding: 1rem;

    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    /* Add a gap between store items */
    justify-content: flex-start;
    align-content: flex-start;
    /* Pack items to the top */

    z-index: 1;
    overflow-y: auto;
    position: relative;
    /* Needed for positioning the button */
    flex: 3;
    /* Set flex-grow to 3 for a 30% height ratio */
    min-height: 0;
    /* Prevent flexbox overflow */
}

#auto-buy-toggle {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    padding: 0.5rem 1rem;
    cursor: pointer;
    border-radius: 0.5rem;
    z-index: 2;
    /* Ensure it's on top of store items */
    /* Glassmorphism style */
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: white;
    font-weight: bold;
    transition: background-color 0.3s ease;
}

#auto-buy-toggle:hover {
    background: rgba(255, 255, 255, 0.2);
}

#auto-buy-toggle.active {
    background-color: rgba(76, 175, 80, 0.5);
    /* Semi-transparent green */
    border-color: rgba(76, 175, 80, 0.8);
    color: white;
}

#lawn-simulator {
    /* Glassmorphism Style */
    background: rgba(25, 25, 25, 0.4);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 1rem;

    width: 30%;

    /* Take up the remaining horizontal space */
    position: relative;
    /* Crucial for positioning Gompeis */
    overflow: hidden;
    /* Hide Gompeis that might be placed outside */
    margin-left: 1rem;
    /* Add some space */
}

.pasture-gompei {
    position: absolute;
    width: 50px;
    /* Revert to fixed size */
    height: auto;
}

.pasture-supergompei {
    position: absolute;
    width: 100px;
    /* Revert to fixed size */
    height: auto;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    filter: hue-rotate(180deg) sepia(calc(var(--gompei-count) * 10%)) saturate(calc(clamp(0, var(--gompei-count), 10) * 40% + 100%));
    z-index: 1;
    transition: transform 0.5s ease-out, width 0.5s ease-out;
    /* Smooth transition for growth */
}

#widget-container {
    /* Glassmorphism Style */
    background: rgba(25, 25, 25, 0.4);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 1rem;
    padding: 1rem;

    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    /* Add a gap between widgets */
    justify-content: flex-start;
    align-content: flex-start;
    /* Pack items to the top */

    overflow-y: auto;
    flex: 7;
    /* Set flex-grow to 7 for a 70% height ratio */
    min-height: 0;
    /* Prevent flexbox overflow */
}

#super-gompei {
    filter: hue-rotate(180deg) sepia(calc(var(--gompei-count) * 10%)) saturate(calc(clamp(0, var(--gompei-count), 10) * 40% + 100%));
    transform: rotateX(180deg);
    /* filter: sepia(calc(--gompei-count * 0.05)) */
}

.store {
    /* Glassmorphism Style for store items */
    background: rgba(255, 255, 255, 0.1);
    border-radius: 0.75rem;
    border: 1px solid rgba(255, 255, 255, 0.15);

    text-align: center;
    cursor: pointer;
    color: white;
    /* Change text to white for readability */
    position: relative;
    padding: 0.5rem;
    width: var(--widget-width);
    /* Give store items a fixed width */
}

.store p {
    margin: 2px;
    position: relative;
}

.widget {
    display: flex;
    justify-content: center;
    align-items: center;

    width: var(--widget-width);
    height: var(--widget-height);
    margin: 0;
    /* Margin is now handled by the container's gap */

    cursor: pointer;

    overflow: hidden;
    color: white;
    position: relative;
    border-radius: 0.5rem;
    /* Add border-radius */
}

.store[broke] {
    filter: brightness(0.5);
}

.widget[harvesting] {
    filter: brightness(.5)
}

/* If the widget is an automatic widget */
.widget[auto="true"] {
    background-color: rgba(0, 128, 0, 0.5);
    /* Semi-transparent green */
    border: 1px solid rgba(255, 255, 255, 0.2);
}

/* If the widget is a click widget */
.widget:not([auto="true"]) {
    background-color: rgba(50, 205, 50, 0.5);
    /* Semi-transparent limegreen */
    border: 1px solid rgba(255, 255, 255, 0.3);
}

/* Widget with image */
.widget img {
    max-width: 100%;
    max-height: 100%;
}

.widget[harvesting] .overlay-slide {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    pointer-events: none;

    animation-name: uncover;
    animation-duration: 1000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}

.widget:not([harvesting]) .overlay-slide {
    display: none;
}

/* Floating point indicator */
.point {
    position: absolute;
    transform-origin: center;
    color: aqua;
    animation-name: point-float;
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-iteration-count: 1;
    left: 50%;
    top: 50%;
}

.center {
    text-align: center;
}


@keyframes point-float {
    100% {
        opacity: 0%;
        transform: translateY(-50px);
    }
}

@keyframes uncover {
    0% {
        width: 100%;
    }

    100% {
        width: 0%;
    }
}

@keyframes pulse-animation {
    0% {
        transform: scale(1);
    }

    50% {
        /* Use a CSS variable for the scale, with 1.15 as a fallback */
        transform: scale(var(--pulse-scale, 1.15));
    }

    100% {
        transform: scale(1);
    }
}

.pulsing {
    /* The animation will now use the --pulse-scale variable if it's set */
    animation: pulse-animation 0.4s ease-out;
}